ASSENT SEARCH AUTOMATION (PAIRED WITH VBA CODE):

import xlwings as xw
import yaml
import keyboard
from selenium import webdriver
from selenium.webdriver.edge.options import Options as EdgeOptions
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys

def column_letter_to_index(letter):
    """Convert a column letter to its numerical index."""
    index = 0
    for char in letter:
        index = index * 26 + (ord(char.upper()) - ord('A')) + 1
    return index

def perform_searches(selected_range):
    if not selected_range:
        return

    # Load login details from YAML file
    with open(r'C:\Users\610161178\Downloads\Code\website_login\loginDetails.yml') as file:
        conf = yaml.load(file, Loader=yaml.SafeLoader)
    myAssentUsername = conf['assent_user']['email']
    myAssentPassword = conf['assent_user']['password']

    # Create Edge WebDriver with options
    options = EdgeOptions()
    driver = webdriver.Edge(options=options)

    def login(url, username, password):
        driver.get(url)
        # Wait until the username input field is present
        userin = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, 'username')))
        userin.send_keys(username)
        
        # Wait until the password input field is present
        passin = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, 'password')))
        passin.send_keys(password)
        
        # Wait until the login button is clickable
        logon = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CLASS_NAME, 'btn-primary')))
        logon.click()

    def search(query):
        try:
            # Click on the search button
            search_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.ID, 'nav_searchButton')))
            search_button.click()
            
            # Input the search query
            search_input = WebDriverWait(driver, 5).until(EC.presence_of_element_located((By.ID, 'spotlightText')))
            search_input.send_keys(query)
            
            # Press Enter to perform the search
            search_input.send_keys(Keys.ENTER)

            # Wait for the search results to appear and click the first result
            first_result = WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.CSS_SELECTOR, '.spotlight-result-item'))) 
            first_result.click() # for declaration download ask if preferred to have Kollmorgen or manufacturer's declaration off of Assent
        except:
            print("Search button not found. Please check the page.")

    # Main script logic
    target_url = "https://core-authentication-ui.assentcompliance.com/#/login"

    if "!" in selected_range:
        sheet_name, cell_range = selected_range.split("!")
    else:
        sheet_name = None
        cell_range = selected_range

    # Split the selected range string into row and column indexes
    start, end = cell_range.split(":")
    start_row = int(''.join(filter(str.isdigit, start)))
    start_col = ''.join(filter(str.isalpha, start))
    end_row = int(''.join(filter(str.isdigit, end)))
    end_col = ''.join(filter(str.isalpha, end))

    # Open the Excel workbook
    wb = xw.Book(r'C:\Users\610161178\Downloads\current pec review.xlsm')  # Update with your Excel file path
    if sheet_name:
        sheet = wb.sheets[sheet_name]
    else:
        sheet = wb.sheets.active

    # Perform searches for each cell in the selected range
    for row in range(start_row, end_row + 1):
        for col in range(column_letter_to_index(start_col), column_letter_to_index(end_col) + 1):
            # Get the cell value
            cell_value = sheet.range((row, col)).value
            if cell_value is not None:
                # Open a new tab and perform the search
                driver.execute_script("window.open('');")
                driver.switch_to.window(driver.window_handles[-1])  # Switch to the newly opened tab
                login(target_url, myAssentUsername, myAssentPassword)  # Login if necessary
                search(str(cell_value))
                driver.switch_to.window(driver.window_handles[0])  # Switch back to the original tab

  # Keep the browser window open until the 'Esc' key is pressed
    keyboard.wait('esc')
    driver.quit()

# Read the selected range from the text file
selected_range_file = r'C:\Users\610161178\Downloads\Code\selected_range.txt'
with open(selected_range_file, "r") as file:
    selected_range = file.readline().strip()

# Perform searches using the selected range
perform_searches(selected_range)
